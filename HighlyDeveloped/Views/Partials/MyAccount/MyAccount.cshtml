@inherits Umbraco.Web.Mvc.UmbracoViewPage<HighlyDeveloped.Core.ViewModels.AccountViewModel>
@using HighlyDeveloped.Core.Controllers;
@{
    Html.EnableClientValidation();
    Html.EnableUnobtrusiveJavaScript();
}

@if (TempData["status"] != null)
{
    <div class="container">
        <div class="col">
            <div class="row">
                if ((string)TempData["status"] == "Updated Details")
                {
                <i class="fa fa-5x fa-thumbs-up"></i>
                <p>Your details have been updatet</p>
                }
                else
                {
                <i class="fa fa-5x fa-thumbs-up"></i>
                <p>Thanks for changing your password.</p>
                }
            </div>
        </div>
    </div>
}
else
{
    <div class="container d-flex justify-content-between">
        <div class="col">
            @using (Html.BeginUmbracoForm<AccountController>("HandleUpdateDetails"))
            {
                @Html.AntiForgeryToken()

                <div class="form-group">
                    @Html.LabelFor(m => m.Name)
                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control", @type = "text", placeholder = "Name" })
                    <div class="text-danger">@Html.ValidationMessageFor(m => m.Name)</div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Email)
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", @type = "email", placeholder = "Email Address" })
                    <div class="text-danger">@Html.ValidationMessageFor(m => m.Email)</div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.Username)
                    @Html.TextBoxFor(m => m.Username, new { @class = "form-control", @type = "text", placeholder = "Username" })
                    <div class="text-danger">@Html.ValidationMessageFor(m => m.Username)</div>
                </div>

                <button type="submit" class="btn btn-danger" value="Update Details" name="update-button">Update</button>
            }
        </div>
        <div class="col">
            @using (Html.BeginUmbracoForm<AccountController>("HandleUpdatePassword"))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(m => m.Name)
                @Html.HiddenFor(m => m.Username)
                @Html.HiddenFor(m => m.Email)

                <div class="form-group">
                    @Html.LabelFor(m => m.Password)
                    @Html.TextBoxFor(m => m.Password, new { @class = "form-control", @type = "password", @autocomplete = "off", placeholder = "Password" })
                    <div class="text-danger">@Html.ValidationMessageFor(m => m.Password)</div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(m => m.ConfirmPassword)
                    @Html.TextBoxFor(m => m.ConfirmPassword, new { @class = "form-control", @type = "password", placeholder = "Confirm Password" })
                    <div class="text-danger">@Html.ValidationMessageFor(m => m.ConfirmPassword)</div>
                </div>

                <button type="submit" class="btn btn-danger" value="Update Details" name="update-button">Change Password</button>
            }
        </div>
    </div>
}